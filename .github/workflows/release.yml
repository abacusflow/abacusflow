# This is a basic workflow to help you get started with Actions

name: Release

on:
  push:
    tags: [ "v*.*.*" ]

  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'
      releaseType:
        description: 'Type of the release'
        required: true
        type: choice
        options:
          - prerelease
          - latest
        default: prerelease
env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    container:
      image: ghcr.io/${{ github.repository_owner }}/infra-ci:latest
      options: --user root
    env:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: abacusflow
      POSTGRES_PASSWORD: abacusflow
      POSTGRES_DB: abacusflow
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Init DB
        uses: ./.github/actions/init-db

      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -PnoVersion --no-daemon
          ./gradlew test --no-daemon

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            abacusflow-server/build/
            abacusflow-webapp/build/
            abacusflow-webapp/dist/
            build/
            .gradle/
          retention-days: 1

  release-webapp-electron:
    strategy:
      matrix:
        #        os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    needs: build
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Get Release Info
        id: release-info
        uses: ./.github/actions/get-release-info

      - name: Setup Env
        uses: ./.github/actions/setup-env

      - name: Set package.json version
        working-directory: ./abacusflow-webapp
        shell: bash
        run: |
          TAG="${{ steps.release-info.outputs.tag }}"
          VERSION="${TAG#v}"
          npm version "$VERSION" --no-git-tag-version --allow-same-version

      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew webappBuildElectron --no-daemon

      - name: Release Electron App
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.release-info.outputs.tag }}
          makeLatest: ${{ steps.release-info.outputs.is_latest }}
          prerelease: ${{ steps.release-info.outputs.is_latest == 'false' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            abacusflow-webapp/out/linux/*.AppImage
            abacusflow-webapp/out/linux/*.deb
            abacusflow-webapp/out/linux/*.rpm
            abacusflow-webapp/out/linux/*.tar.gz
            abacusflow-webapp/out/linux/*.snap
            abacusflow-webapp/out/linux/*.pacman
            abacusflow-webapp/out/linux/*.freebsd
            abacusflow-webapp/out/win32/*.exe
            abacusflow-webapp/out/win32/*.msi
            abacusflow-webapp/out/win32/*.zip
            abacusflow-webapp/out/win32/*.7z
            abacusflow-webapp/out/darwin/*.dmg
            abacusflow-webapp/out/darwin/*.pkg
            abacusflow-webapp/out/darwin/*.zip
            abacusflow-webapp/out/darwin/*.app
            abacusflow-webapp/out/**/*.blockmap

  release-docker:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      # 安装 cosign 用于镜像签名
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: "v2.2.4"

      # 设置 Docker Buildx 支持多平台构建和缓存
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # 登录到 GitHub Container Registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for webapp
        id: meta-webapp
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-webapp
          flavor: |
            latest=${{ steps.release-info.outputs.is_latest }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.release-info.outputs.tag }}

      - name: Extract Docker metadata for server
        id: meta-server
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server
          flavor: |
            latest=${{ steps.release-info.outputs.is_latest }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.release-info.outputs.tag }}

      - name: Build and push webapp Docker image
        id: build-and-push-webapp
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./abacusflow-webapp
          file: ./abacusflow-webapp/Dockerfile
          push: true
          tags: ${{ steps.meta-webapp.outputs.tags }}
          labels: ${{ steps.meta-webapp.outputs.labels }}
          cache-from: type=gha,scope=webapp
          cache-to: type=gha,mode=max,scope=webapp
          platforms: linux/amd64,linux/arm64

      - name: Build and push server Docker image
        id: build-and-push-server
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./abacusflow-server
          file: ./abacusflow-server/Dockerfile
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha,scope=server
          cache-to: type=gha,mode=max,scope=server
          platforms: linux/amd64,linux/arm64

      - name: Sign webapp Docker image
        env:
          TAGS: ${{ steps.meta-webapp.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-webapp.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign server Docker image
        env:
          TAGS: ${{ steps.meta-server.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-server.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}