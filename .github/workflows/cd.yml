name: CD

permissions:
  contents: none

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      environment:
        description: environment
        required: true
        type: choice
        options: [ "production", "development" ]
        default: "production"
      version:
        description: version
        required: true
        default: "latest"
jobs:
  deploytest:
     # Job名称清晰地表明这是一个测试部署
     name: Test Deploy from PR to Development
     runs-on: ubuntu-latest

     # 关键：为测试硬编码一个安全的环境
     # 这确保了PR测试永远不会部署到生产环境
     environment: production

     steps:
       # 新增步骤：检出代码，这样才能获取到分支和commit信息
       - name: Checkout code
         uses: actions/checkout@v3

       - name: 调试：打印上下文信息
         run: |
           echo "这是一个由PR触发的测试部署。"
           echo "PR分支名 (Head Ref): ${{ github.head_ref }}"
           echo "目标分支名 (Base Ref): ${{ github.base_ref }}"
           echo "Commit SHA: ${{ github.sha }}"
           echo "硬编码的环境: development"

       - name: Deploy to Server
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.SERVER_IP }}
           username: ${{ secrets.SERVER_USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           port: 22

           script: |
  
             # 硬编码部署到开发环境的目录
             cd /opt/abacusflow/abacusflow/
  
             echo "Starting TEST deployment of version laste to environment..."
  
             # 这里的 docker-compose 文件最好也是开发环境专用的
             docker compose -f docker-compose-dev.yml pull
             docker compose -f docker-compose-dev.yml up -d --remove-orphans
  
             echo "Test deployment completed successfully."
  deploy:
    if: startsWith(github.ref, 'refs/tags/x')
    # Job名称会动态显示正在部署的环境
    name: Deploy ${{ github.event.inputs.version }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    # 关联到GitHub的环境，可以添加审批等保护规则
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Deploy to Server
        # 使用一个流行的、可靠的SSH Action
        uses: appleboy/ssh-action@master
        with:
          # 从GitHub Secrets中读取服务器连接信息
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22 # SSH端口，默认为22

          # 在远程服务器上执行的脚本
          script: |
            export ABACUSFLOW_SERVER_VERSION=${{ github.event.inputs.version }}
            export ABACUSFLOW_WEBAPP_VERSION=${{ github.event.inputs.version }}

            # 进入项目部署目录
            cd /opt/abacusflow/abacusflow/

            echo "Starting deployment of version ${{github.event.inputs.version}} to ${{github.event.inputs.environment }}..."

            docker compose -f docker-compose-prod.yml pull
            docker compose -f docker-compose-prod.yml up -d --remove-orphans

            echo "Deployment completed successfully."