/* tslint:disable */
/* eslint-disable */
/**
 * abacusflow api
 * 进销存系统服务接口文档
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    nickname: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    sex: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    age: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof User
     */
    roles: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    enabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    locked: boolean;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    createdAt: number;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('nickname' in value) || value['nickname'] === undefined) return false;
    if (!('sex' in value) || value['sex'] === undefined) return false;
    if (!('age' in value) || value['age'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('locked' in value) || value['locked'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'nickname': json['nickname'],
        'sex': json['sex'],
        'age': json['age'],
        'roles': json['roles'],
        'enabled': json['enabled'],
        'locked': json['locked'],
        'createdAt': json['createdAt'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'username': value['username'],
        'nickname': value['nickname'],
        'sex': value['sex'],
        'age': value['age'],
        'roles': value['roles'],
        'enabled': value['enabled'],
        'locked': value['locked'],
        'createdAt': value['createdAt'],
    };
}

