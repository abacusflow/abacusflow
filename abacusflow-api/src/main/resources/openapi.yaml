openapi: 3.0.0
info:
  title: AbacusFlow API
  version: 1.0.0
  description: API for AbacusFlow system

servers:
  - url: /api/v1

paths:
  /users:
    get:
      summary: List all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasicUserTO'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTO'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTO'
  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTO'
    put:
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTO'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTO'
    delete:
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTO'

  /suppliers:
    get:
      summary: List all suppliers
      responses:
        '200':
          description: List of suppliers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierTO'
    post:
      summary: Create a new supplier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierTO'
      responses:
        '201':
          description: Supplier created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierTO'
  /suppliers/{id}:
    get:
      summary: Get supplier by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Supplier details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierTO'
    put:
      summary: Update supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierTO'
      responses:
        '200':
          description: Supplier updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierTO'
    delete:
      summary: Delete supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Supplier deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierTO'

  /customers:
    get:
      summary: List all customers
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTO'
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTO'
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTO'
  /customers/{id}:
    get:
      summary: Get customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTO'
    put:
      summary: Update customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerTO'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTO'
    delete:
      summary: Delete customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Customer deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerTO'

  /products:
    get:
      summary: List all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductTO'
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTO'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTO'
  /products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTO'
    put:
      summary: Update product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTO'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTO'
    delete:
      summary: Delete product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTO'

  /product-categories:
    get:
      summary: List all product categories
      responses:
        '200':
          description: List of product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategoryTO'
    post:
      summary: Create a new product category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryTO'
      responses:
        '201':
          description: Product category created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryTO'
  /product-categories/{id}:
    get:
      summary: Get product category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryTO'
    put:
      summary: Update product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryTO'
      responses:
        '200':
          description: Product category updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryTO'
    delete:
      summary: Delete product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product category deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryTO'

  /warehouses:
    get:
      summary: List all warehouses
      responses:
        '200':
          description: List of warehouses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseTO'
    post:
      summary: Create a new warehouse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseTO'
      responses:
        '201':
          description: Warehouse created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseTO'
  /warehouses/{id}:
    get:
      summary: Get warehouse by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Warehouse details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseTO'
    put:
      summary: Update warehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseTO'
      responses:
        '200':
          description: Warehouse updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseTO'
    delete:
      summary: Delete warehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Warehouse deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseTO'

  /inventories:
    get:
      summary: List all inventories
      responses:
        '200':
          description: List of inventories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryTO'
    post:
      summary: Create a new inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryTO'
      responses:
        '201':
          description: Inventory created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTO'
  /inventories/{id}:
    get:
      summary: Get inventory by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Inventory details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTO'
    put:
      summary: Update inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryTO'
      responses:
        '200':
          description: Inventory updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTO'
    delete:
      summary: Delete inventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Inventory deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTO'

  /sale-orders:
    get:
      summary: List all sale orders
      responses:
        '200':
          description: List of sale orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SaleOrderTO'
    post:
      summary: Create a new sale order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleOrderTO'
      responses:
        '201':
          description: Sale order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrderTO'
  /sale-orders/{id}:
    get:
      summary: Get sale order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sale order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrderTO'
    put:
      summary: Update sale order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleOrderTO'
      responses:
        '200':
          description: Sale order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrderTO'
    delete:
      summary: Delete sale order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sale order deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrderTO'

  /purchase-orders:
    get:
      summary: List all purchase orders
      responses:
        '200':
          description: List of purchase orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrderTO'
    post:
      summary: Create a new purchase order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderTO'
      responses:
        '201':
          description: Purchase order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTO'
  /purchase-orders/{id}:
    get:
      summary: Get purchase order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Purchase order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTO'
    put:
      summary: Update purchase order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderTO'
      responses:
        '200':
          description: Purchase order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTO'
    delete:
      summary: Delete purchase order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Purchase order deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTO'

components:
  schemas:
    UserTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        sex:
          type: string
          nullable: true
        age:
          type: integer
        nick:
          type: string
        roles:
          type: array
          items:
            type: string
        enabled:
          type: boolean
        locked:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    BasicUserTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        nick:
          type: string
        sex:
          type: string
          nullable: true
        age:
          type: integer
        roles:
          type: array
          items:
            type: string
        enabled:
          type: boolean
        locked:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SupplierTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contactPerson:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CustomerTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProductTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        unitPrice:
          type: number
          format: double
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        supplierId:
          type: integer
          format: int64
        specification:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProductCategoryTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
    WarehouseTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          type: string
          nullable: true
        capacity:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    InventoryTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        warehouseId:
          type: integer
          format: int64
        quantity:
          type: integer
        safetyStock:
          type: integer
        version:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SaleOrderTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        status:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleItemTO'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SaleItemTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
        unitPrice:
          type: number
          format: double
    PurchaseOrderTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        supplierId:
          type: integer
          format: int64
        status:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseItemTO'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PurchaseItemTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
        unitPrice:
          type: number
          format: double 