openapi: 3.0.0
info:
  title: abacusflow api
  version: 0.0.1
  description: 小算盘服务接口文档
servers:
  - url: http://localhost:8080
tags:
  - name: inventory
    description: 管理产品库存状态和库存操作，包括库存数量、多储存点支持、库存调整与预警机制。
  - name: partner
    description: 管理客户和供应商等外部合作伙伴的信息，并与交易历史进行关联管理。
  - name: product
    description: 管理产品的基础信息，包括分类、规格及产品本身的增删改查操作。
  - name: transaction
    description: 处理采购和销售订单的全流程，涵盖订单创建、状态跟踪及订单明细处理。
  - name: user
    description: 管理系统用户账户、权限控制及用户行为相关的信息。
  - name: depot
    description: 管理物理储存点及其内部存储空间，包括库位分配、容量规划和储存点布局设计。

paths:
  /users:
    get:
      operationId: listBasicUsers
      tags:
        - user
      summary: List all users
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicUser"
    post:
      operationId: addUser
      tags:
        - user
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInput"
      responses:
        "200":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{id}:
    get:
      operationId: getUser
      tags:
        - user
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      operationId: updateUser
      tags:
        - user
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserInput"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      operationId: deleteUser
      tags:
        - user
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User deleted

  /suppliers:
    get:
      operationId: listBasicSuppliersPage
      tags:
        - partner
      summary: List suppliers page
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: contactPerson
          in: query
          required: false
          schema:
            type: string
        - name: phone
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of suppliers page
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicSupplier"
    post:
      operationId: addSupplier
      tags:
        - partner
      summary: Create a new supplier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSupplierInput"
      responses:
        "200":
          description: Supplier created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"

  /suppliers/{id}:
    get:
      operationId: getSupplier
      tags:
        - partner
      summary: Get supplier by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Supplier details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
    put:
      operationId: updateSupplier
      tags:
        - partner
      summary: Update supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSupplierInput"
      responses:
        "200":
          description: Supplier updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
    delete:
      operationId: deleteSupplier
      tags:
        - partner
      summary: Delete supplier
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Supplier deleted

  /suppliers/selectable:
    get:
      operationId: listSelectableSuppliers
      tags:
        - partner
      summary: List suppliers for selection
      responses:
        "200":
          description: List of suppliers for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SelectableSupplier"

  /customers:
    get:
      operationId: listBasicCustomersPage
      tags:
        - partner
      summary: List customers page
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: phone
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of customers page
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicCustomer"
    post:
      operationId: addCustomer
      tags:
        - partner
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerInput"
      responses:
        "200":
          description: Customer created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"

  /customers/{id}:
    get:
      operationId: getCustomer
      tags:
        - partner
      summary: Get customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Customer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      operationId: updateCustomer
      tags:
        - partner
      summary: Update customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerInput"
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    delete:
      operationId: deleteCustomer
      tags:
        - partner
      summary: Delete customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Customer deleted

  /customers/selectable:
    get:
      operationId: listSelectableCustomers
      tags:
        - partner
      summary: List customers for selection (e.g. dropdown)
      responses:
        "200":
          description: List of customers for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SelectableCustomer"

  /products:
    get:
      operationId: listBasicProductsPage
      tags:
        - product
      summary: List products page
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ProductType"
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of products page
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicProduct"
    post:
      operationId: addProduct
      tags:
        - product
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductInput"
      responses:
        "200":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /products/{id}:
    get:
      operationId: getProduct
      tags:
        - product
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      operationId: updateProduct
      tags:
        - product
      summary: Update product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductInput"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      operationId: deleteProduct
      tags:
        - product
      summary: Delete product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product deleted

  /products/selectable:
    get:
      operationId: listSelectableProducts
      tags:
        - product
      summary: List products for selection (e.g. dropdown)
      responses:
        "200":
          description: List of products for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SelectableProduct"

  /product-categories:
    get:
      operationId: listBasicProductCategories
      tags:
        - product
      summary: List all product categories
      responses:
        "200":
          description: List of product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicProductCategory"
    post:
      operationId: addProductCategory
      tags:
        - product
      summary: Create a new product category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductCategoryInput"
      responses:
        "200":
          description: Product category created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCategory"

  /product-categories/{id}:
    get:
      operationId: getProductCategory
      tags:
        - product
      summary: Get product category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCategory"
    put:
      operationId: updateProductCategory
      tags:
        - product
      summary: Update product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductCategoryInput"
      responses:
        "200":
          description: Product category updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCategory"
    delete:
      operationId: deleteProductCategory
      tags:
        - product
      summary: Delete product category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product category deleted

  /product-categories/selectable:
    get:
      operationId: listSelectableProductCategories
      tags:
        - product
      summary: List all product categories for selection
      responses:
        "200":
          description: List of product categories for selectable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SelectableProductCategory"

  /depots:
    get:
      operationId: listBasicDepots
      tags:
        - depot
      summary: List all depots
      responses:
        "200":
          description: List of depots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BasicDepot"
    post:
      operationId: addDepot
      tags:
        - depot
      summary: Create a new depot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDepotInput"
      responses:
        "200":
          description: Depot created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Depot"

  /depots/{id}:
    get:
      operationId: getDepot
      tags:
        - depot
      summary: Get depot by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Depot details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Depot"
    put:
      operationId: updateDepot
      tags:
        - depot
      summary: Update depot
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDepotInput"
      responses:
        "200":
          description: Depot updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Depot"
    delete:
      operationId: deleteDepot
      tags:
        - depot
      summary: Delete depot
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Depot deleted

  /inventories:
    get:
      operationId: listBasicInventoriesPage
      tags:
        - inventory
      summary: Query inventories with pagination and filters
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: productCategoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: productName
          in: query
          required: false
          schema:
            type: string
        - name: productType
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ProductType"
        - name: inventoryUnitCode
          in: query
          required: false
          schema:
            type: string
        - name: depotName
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Paged result of matching inventories
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicInventory"

  /inventories/{id}:
    get:
      operationId: getInventory
      tags:
        - inventory
      summary: Get inventory by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Inventory details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inventory"

  /inventories/{id}/adjust-warning-line:
    post:
      operationId: adjustWarningLine
      tags:
        - inventory
      summary: Adjust safety and maximum stock levels
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - safetyStock
                - maxStock
              properties:
                safetyStock:
                  type: integer
                  format: int64
                  minimum: 0
                maxStock:
                  type: integer
                  format: int64
                  minimum: 0
      responses:
        "200":
          description: Warning line adjusted successfully

  /inventories/{id}/safety-check:
    get:
      operationId: checkSafetyStock
      tags:
        - inventory
      summary: Check if inventory is below safety stock
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Safety stock status
          content:
            application/json:
              schema:
                type: boolean

  /inventories/report:
    get:
      operationId: exportInventoryPdf
      summary: 导出库存清单 PDF
      tags:
        - inventory
      responses:
        "200":
          description: 成功导出 PDF 文件
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /inventory-units/{id}:
    get:
      operationId: getInventoryUnit
      tags:
        - inventory
      summary: Get inventory unit by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Inventory unit details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryUnit"

  /inventory-units/{id}/assign-depot:
    post:
      operationId: assignInventoryUnitDepot
      tags:
        - inventory
      summary: Assign inventory unit to another depot
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - depotId
              properties:
                depotId:
                  type: integer
                  format: int64
                  description: ID of the depot to assign
      responses:
        "200":
          description: Depot assigned successfully

  /inventory-units/selectable:
    get:
      operationId: listSelectableInventoryUnits
      tags:
        - inventory
      summary: List all inventoryUnits for selection
      parameters:
        - name: statuses
          in: query
          required: false
          description: 筛选的库存单元状态列表
          schema:
            type: array
            items:
              $ref: "#/components/schemas/InventoryUnitStatus"
      responses:
        "200":
          description: List of inventoryUnits for selection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SelectableInventoryUnit"

  /sale-orders:
    get:
      operationId: listBasicSaleOrdersPage
      tags:
        - transaction
      summary: List sale orders page
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: orderNo
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: customerName
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: productName
          in: query
          required: false
          schema:
            type: string
        - name: orderDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of sale orders page
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicSaleOrder"
    post:
      operationId: addSaleOrder
      tags:
        - transaction
      summary: Create a new sale order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSaleOrderInput"
      responses:
        "200":
          description: Sale order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaleOrder"

  /sale-orders/{id}:
    get:
      operationId: getSaleOrder
      tags:
        - transaction
      summary: Get sale order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sale order details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaleOrder"

  /sale-orders/{id}/complete:
    post:
      operationId: completeSaleOrder
      tags:
        - transaction
      summary: Complete a sale order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sale order marked as completed

  /sale-orders/{id}/cancel:
    post:
      operationId: cancelSaleOrder
      tags:
        - transaction
      summary: Cancel a sale order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sale order marked as canceled

  /sale-orders/{id}/reverse:
    post:
      operationId: reverseSaleOrder
      tags:
        - transaction
      summary: Reverse a sale order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sale order marked as reversed

  /purchase-orders:
    get:
      operationId: listBasicPurchaseOrdersPage
      tags:
        - transaction
      summary: List purchase orders page
      parameters:
        - name: pageIndex
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 10
            maximum: 100
        - name: orderNo
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: supplierName
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: productName
          in: query
          required: false
          schema:
            type: string
        - name: orderDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of purchase orders page
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageTemplate"
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicPurchaseOrder"
    post:
      operationId: addPurchaseOrder
      tags:
        - transaction
      summary: Create a new purchase order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderInput"
      responses:
        "200":
          description: Purchase order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"

  /purchase-orders/{id}:
    get:
      operationId: getPurchaseOrder
      tags:
        - transaction
      summary: Get purchase order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Purchase order details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"

  /purchase-orders/{id}/complete:
    post:
      operationId: completePurchaseOrder
      tags:
        - transaction
      summary: Complete a purchase order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Purchase order marked as completeSaleOrder

  /purchase-orders/{id}/cancel:
    post:
      operationId: cancelPurchaseOrder
      tags:
        - transaction
      summary: Cancel a purchase order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Purchase order marked as canceled

  /purchase-orders/{id}/reverse:
    post:
      operationId: reversePurchaseOrder
      tags:
        - transaction
      summary: Reverse a purchase order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Purchase order marked as reversed

components:
  schemas:
    # ============= User schemas =============
    User:
      type: object
      required:
        - id
        - name
        - age
        - nick
        - roleIds
        - enabled
        - locked
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 用户唯一标识
        name:
          type: string
          description: 用户真实姓名
        sex:
          $ref: "#/components/schemas/Sex"
        age:
          type: integer
          description: 年龄
        nick:
          type: string
          description: 昵称
        roleIds:
          type: array
          items:
            type: integer
            format: int64
          description: 用户角色列表
        enabled:
          type: boolean
          description: 账户是否启用
        locked:
          type: boolean
          description: 账户是否锁定
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicUser:
      type: object
      required:
        - id
        - name
        - nick
        - enabled
        - locked
      properties:
        id:
          type: integer
          format: int64
          description: 用户ID
        name:
          type: string
          description: 用户姓名
        nick:
          type: string
          description: 昵称
        enabled:
          type: boolean
          description: 是否启用
        locked:
          type: boolean
          description: 是否锁定

    CreateUserInput:
      type: object
      required:
        - name
        - nick
      properties:
        name:
          type: string
          description: 账户名
        sex:
          $ref: "#/components/schemas/Sex"
        age:
          type: integer
          minimum: 1
          maximum: 200
          description: 年龄
        nick:
          type: string
          description: 昵称

    UpdateUserInput:
      type: object
      properties:
        sex:
          $ref: "#/components/schemas/Sex"
        age:
          type: integer
          minimum: 1
          maximum: 200
          description: 年龄
        nick:
          type: string
          description: 昵称

    # ============= Supplier schemas =============
    Supplier:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 供应商唯一标识
        name:
          type: string
          description: 供应商名称
        contactPerson:
          type: string
          nullable: true
          description: 联系人姓名
        phone:
          type: string
          nullable: true
          description: 联系电话
        email:
          type: string
          nullable: true
          description: 邮箱地址
        address:
          type: string
          nullable: true
          description: 地址
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicSupplier:
      type: object
      required:
        - id
        - name
        - totalOrderCount
        - totalOrderAmount
      properties:
        id:
          type: integer
          format: int64
          description: 供应商ID
        name:
          type: string
          description: 供应商名称
        contactPerson:
          type: string
          nullable: true
          description: 联系人
        phone:
          type: string
          nullable: true
          description: 联系电话
        address:
          type: string
          nullable: true
          description: 地址
        totalOrderCount:
          type: integer
          format: int32
          description: 历史订单总数
        totalOrderAmount:
          type: number
          format: double
          description: 历史订单总金额
        lastOrderTime:
          type: long
          format: format
          nullable: true
          description: 最近一次交易时间
        # topProductsSummary:
        #   type: array
        #   items:
        #     type: string
        #   maxItems: 10
        #   description: 购买频率或金额排名前10的商品名称列表

    CreateSupplierInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: 供应商名称
        contactPerson:
          type: string
          nullable: true
          description: 联系人姓名
        phone:
          type: string
          nullable: true
          description: 联系电话
        email:
          type: string
          nullable: true
          format: email
          description: 邮箱地址
        address:
          type: string
          nullable: true
          description: 地址

    UpdateSupplierInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 供应商名称
        contactPerson:
          type: string
          nullable: true
          description: 联系人姓名
        phone:
          type: string
          nullable: true
          description: 联系电话
        email:
          type: string
          nullable: true
          format: email
          description: 邮箱地址
        address:
          type: string
          nullable: true
          description: 地址

    SelectableSupplier:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: 供应商ID
        name:
          type: string
          description: 供应商名称
    # ============= Customer schemas =============
    Customer:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 客户唯一标识
        name:
          type: string
          description: 客户名称
        phone:
          type: string
          nullable: true
          description: 联系电话
        address:
          type: string
          nullable: true
          description: 地址
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicCustomer:
      type: object
      required:
        - id
        - name
        - totalOrderCount
        - totalOrderAmount
      properties:
        id:
          type: integer
          format: int64
          description: 客户ID
        name:
          type: string
          description: 客户名称
        phone:
          type: string
          nullable: true
          description: 联系电话
        address:
          type: string
          nullable: true
          description: 地址
        totalOrderCount:
          type: integer
          format: int32
          description: 历史订单总数
        totalOrderAmount:
          type: number
          format: double
          description: 历史订单总金额
        lastOrderTime:
          type: long
          format: format
          nullable: true
          description: 最近一次交易时间
        # topProductsSummary:
        #   type: array
        #   items:
        #     type: string
        #   maxItems: 10
        #   description: 购买频率或金额排名前10的商品名称列表

    CreateCustomerInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: 客户名称
        phone:
          type: string
          nullable: true
          description: 联系电话
        address:
          type: string
          nullable: true
          description: 地址

    UpdateCustomerInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 客户名称
        phone:
          type: string
          nullable: true
          description: 联系电话
        address:
          type: string
          nullable: true
          description: 地址

    SelectableCustomer:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: 客户ID
        name:
          type: string
          description: 客户名称

    # ============= Product schemas =============
    Product:
      type: object
      required:
        - id
        - name
        - type
        - unit
        - unitPrice
        - categoryId
        - supplierId
        - enabled
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 产品唯一标识
        name:
          type: string
          description: 产品名称
        type:
          $ref: "#/components/schemas/ProductType"
        specification:
          type: string
          description: 规格
        categoryId:
          type: integer
          format: int64
          description: 分类ID
        note:
          type: string
          nullable: true
          description: 备注
        unit:
          $ref: "#/components/schemas/ProductUnit"
        enabled:
          type: boolean
          description: 是否启用
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳

        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicProduct:
      type: object
      required:
        - id
        - name
        - type
        - unit
        - unitPrice
        - categoryName
        - supplierName·
        - enabled
      properties:
        id:
          type: integer
          format: int64
          description: 产品ID
        name:
          type: string
          description: 产品名称
        type:
          $ref: "#/components/schemas/ProductType"
        specification:
          type: string
          description: 产品规格
        categoryName:
          type: string
          description: 分类名称
        unit:
          $ref: "#/components/schemas/ProductUnit"
        enabled:
          type: boolean
          description: 是否启用
        note:
          type: string
          description: 备注

    CreateProductInput:
      type: object
      required:
        - name
        - type
        - unit
        - categoryId
      properties:
        name:
          type: string
          minLength: 1
          description: 产品名称
        type:
          $ref: "#/components/schemas/ProductType"
        specification:
          type: string
          description: 产品规格
        categoryId:
          type: integer
          format: int64
          description: 分类ID
        note:
          type: string
          nullable: true
          description: 备注
        unit:
          $ref: "#/components/schemas/ProductUnit"

    UpdateProductInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 产品名称
        type:
          $ref: "#/components/schemas/ProductType"
        specification:
          type: string
          description: 产品规格
        categoryId:
          type: integer
          format: int64
          description: 分类ID
        note:
          type: string
          nullable: true
          description: 备注
        unit:
          $ref: "#/components/schemas/ProductUnit"

    SelectableProduct:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: integer
          format: int64
          description: 产品ID
        name:
          type: string
          description: 产品名称
        type:
          $ref: "#/components/schemas/ProductType"

    # ============= ProductCategory schemas =============
    ProductCategory:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 分类唯一标识
        name:
          type: string
          description: 分类名称
        description:
          type: string
          nullable: true
          description: 分类描述
        parentId:
          type: integer
          format: int64
          nullable: true
          description: 父分类ID
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicProductCategory:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: 分类ID
        name:
          type: string
          description: 分类名称
        parentName:
          type: string
          nullable: true
          description: 父分类名称

    CreateProductCategoryInput:
      type: object
      required:
        - name
        - parentId
      properties:
        name:
          type: string
          minLength: 1
          description: 分类名称
        description:
          type: string
          nullable: true
          description: 分类描述
        parentId:
          type: integer
          format: int64
          description: 父分类ID

    UpdateProductCategoryInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 分类名称
        description:
          type: string
          nullable: true
          description: 分类描述
        parentId:
          type: integer
          format: int64
          nullable: true
          description: 父分类ID

    SelectableProductCategory:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: 分类ID
        name:
          type: string
          description: 分类名称
        parentId:
          type: integer
          format: int64
          nullable: true
          description: 父分类ID
        parentName:
          type: string
          nullable: true
          description: 父分类名称

    # ============= ProductInstance schemas =============
    BasicProductInstance:
      type: object
      required:
        - id
        - name
        - serialNumber
        - unitPrice
        - productName
        - purchaseOrderNo
      properties:
        id:
          type: integer
          format: int64
          description: 产品实例ID
        name:
          type: string
          description: 名字
        serialNumber:
          type: string
          description: 序列号
        unitPrice:
          type: number
          format: double
          minimum: 0
          description: 单价
        purchaseOrderNo:
          type: string
          description: 采购单号
        saleOrderNo:
          type: string
          description: 销售单号

    # ============= Depot schemas =============
    Depot:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 储存点唯一标识
        name:
          type: string
          description: 储存点名称
        location:
          type: string
          nullable: true
          description: 储存点地址
        capacity:
          type: integer
          nullable: true
          minimum: 0
          description: 储存点容量
        enabled:
          type: boolean
          description: 是否启用
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicDepot:
      type: object
      required:
        - id
        - name
        - enabled
      properties:
        id:
          type: integer
          format: int64
          description: 储存点ID
        name:
          type: string
          description: 储存点名称
        location:
          type: string
          nullable: true
          description: 储存点地址
        capacity:
          type: integer
          nullable: true
          minimum: 0
          description: 储存点容量
        enabled:
          type: boolean
          description: 是否启用

    CreateDepotInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: 储存点名称
        location:
          type: string
          nullable: true
          description: 储存点地址
        capacity:
          type: integer
          nullable: true
          minimum: 0
          description: 储存点容量

    UpdateDepotInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: 储存点名称
        location:
          type: string
          nullable: true
          description: 储存点地址
        capacity:
          type: integer
          nullable: true
          minimum: 0
          description: 储存点容量

    # ============= Inventory schemas =============
    Inventory:
      type: object
      required:
        - id
        - productId
        - safetyStock
        - maxStock
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 库存唯一标识
        productId:
          type: integer
          format: int64
          description: 产品ID
        safetyStock:
          type: integer
          format: int64
          description: 安全库存预警线
        maxStock:
          type: integer
          format: int64
          description: 最高库存预警线
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicInventory:
      type: object
      required:
        - id
        - productName
        - productType
        - initialQuantity
        - quantity
        - remainingQuantity
        - depotNames
        - safetyStock
        - maxStock
        - units
      properties:
        id:
          type: integer
          format: int64
          description: 库存ID
        productName:
          type: string
          description: 产品名称
        productType:
          $ref: "#/components/schemas/ProductType"
        productSpecification:
          type: string
          description: 产品规格
        productNote:
          type: string
          description: 产品备注
        initialQuantity:
          type: integer
          format: int64
          description: 初始总库存数量
        quantity:
          type: integer
          format: int64
          description: 现有总库存数量
        remainingQuantity:
          type: integer
          format: int64
          description: 可用总库存数量
        depotNames:
          description: 存储点列表
          type: array
          items:
            type: string
        safetyStock:
          type: integer
          format: int64
          description: 安全库存预警线
        maxStock:
          type: integer
          format: int64
          description: 最大库存预警线
        units:
          type: object
          items:
            $ref: "#/components/schemas/BasicInventoryUnit"

    # ============= InventoryUnit schemas =============

    BasicInventoryUnit:
      type: object
      required:
        - id
        - type
        - status
        - title
        - purchaseOrderNo
        - saleOrderNos
        - initialQuantity
        - quantity
        - remainingQuantity
        - unitPrice
        - receivedAt
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/InventoryUnitType"
        status:
          $ref: "#/components/schemas/InventoryUnitStatus"
        title:
          type: string
        purchaseOrderNo:
          type: string
          format: uuid
        saleOrderNos:
          type: array
          items:
            type: string
            format: uuid
        depotName:
          type: string
        initialQuantity:
          type: integer
          format: int64
          description: 初始库存数量
        quantity:
          type: integer
          format: int64
          description: 现有库存数量
        remainingQuantity:
          type: integer
          format: int64
          description: 可用库存数量
        unitPrice:
          type: number
          format: double
        receivedAt:
          type: integer
          format: int64
        batchCode:
          type: string
          format: uuid
          nullable: true
        serialNumber:
          type: string
          nullable: true

    InventoryUnit:
      type: object
      required:
        - id
        - unitType
        - inventoryId
        - purchaseOrderId
        - initialQuantity
        - quantity
        - remainingQuantity
        - unitPrice
        - status
        - saleOrderIds
        - receivedAt
      properties:
        id:
          type: integer
          format: int64
        unitType:
          $ref: "#/components/schemas/InventoryUnitType"
        inventoryId:
          type: integer
          format: int64
        purchaseOrderId:
          type: integer
          format: int64
        initialQuantity:
          type: integer
          format: int64
          description: 初始库存数量
        quantity:
          type: integer
          format: int64
          description: 现有库存数量
        remainingQuantity:
          type: integer
          format: int64
          description: 可用库存数量
        unitPrice:
          type: number
          format: double
        depotId:
          type: integer
          format: int64
          nullable: true
        status:
          $ref: "#/components/schemas/InventoryUnitStatus"
        saleOrderIds:
          type: array
          items:
            type: integer
            format: int64
        receivedAt:
          type: integer
          format: int64
        serialNumber:
          type: string
          nullable: true
        batchCode:
          type: string
          format: uuid
          nullable: true

    SelectableInventoryUnit:
      type: object
      required:
        - id
        - type
        - title
        - status
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/InventoryUnitType"
        title:
          type: string
        status:
          $ref: "#/components/schemas/InventoryUnitStatus"

    InventoryUnitType:
      type: string
      description: 单元类型
      enum:
        - instance
        - batch
      x-enum-varnames:
        - instance
        - batch
      x-enum-descriptions:
        - 资产单元
        - 批次单元

    InventoryUnitStatus:
      type: string
      description: 单元类型
      enum:
        - normal
        - consumed
        - canceled
        - reversed
      x-enum-varnames:
        - normal
        - consumed
        - canceled
        - reversed
      x-enum-descriptions:
        - 初始状态
        - 已出库
        - 被人为取消
        - 因采购撤销等原因回退

    # ============= SaleOrder schemas =============
    SaleOrder:
      type: object
      required:
        - id
        - orderNo
        - customerId
        - status
        - totalAmount
        - orderItems
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 销售订单唯一标识
        orderNo:
          type: string
          description: 订单编号
        customerId:
          type: integer
          format: int64
          description: 客户ID
        status:
          $ref: "#/components/schemas/OrderStatus"
        note:
          type: string
          nullable: true
          description: 备注
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/SaleOrderItem"
          description: 订单明细
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicSaleOrder:
      type: object
      required:
        - id
        - orderNo
        - customerName
        - status
        - totalAmount
        - totalQuantity
        - itemCount
        - orderDate
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: 销售订单ID
        orderNo:
          type: string
          description: 订单编号
        customerName:
          type: string
          description: 客户名称
        status:
          $ref: "#/components/schemas/OrderStatus"
        totalAmount:
          type: number
          format: double
          description: 订单总金额
        totalQuantity:
          type: integer
          format: int64
          description: 所有产品购买数量总和
        itemCount:
          type: integer
          description: 不同产品的种类数
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        autoCompleteDate:
          type: string
          format: date
          example: "1970-01-07"
          description: 自动完成天数

    CreateSaleOrderInput:
      type: object
      required:
        - customerId
        - orderItems
        - orderDate
      properties:
        customerId:
          type: integer
          format: int64
          description: 客户ID
        note:
          type: string
          nullable: true
          description: 备注
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/SaleOrderItemInput"
          minItems: 1
          description: 订单明细

    # ============= PurchaseOrder schemas =============
    PurchaseOrder:
      type: object
      required:
        - id
        - orderNo
        - supplierId
        - status
        - totalAmount
        - orderItems
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: 采购订单唯一标识
        orderNo:
          type: string
          description: 订单编号
        supplierId:
          type: integer
          format: int64
          description: 供应商ID
        status:
          $ref: "#/components/schemas/OrderStatus"
        note:
          type: string
          nullable: true
          description: 备注
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseOrderItem"
          description: 订单明细
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        updatedAt:
          type: integer
          format: int64
          description: 更新时间戳

    BasicPurchaseOrder:
      type: object
      required:
        - id
        - orderNo
        - supplierName
        - status
        - totalAmount
        - totalQuantity
        - itemCount
        - orderDate
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: 采购订单ID
        orderNo:
          type: string
          description: 订单编号
        supplierName:
          type: string
          description: 供应商名称
        status:
          $ref: "#/components/schemas/OrderStatus"
        totalAmount:
          type: number
          format: double
          description: 订单总金额
        totalQuantity:
          type: integer
          format: int64
          description: 所有产品购买数量总和
        itemCount:
          type: integer
          description: 不同产品的种类数
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        createdAt:
          type: integer
          format: int64
          description: 创建时间戳
        autoCompleteDate:
          type: string
          format: date
          example: "1970-01-07"
          description: 自动完成天数

    CreatePurchaseOrderInput:
      type: object
      required:
        - supplierId
        - orderDate
        - orderItems
      properties:
        supplierId:
          type: integer
          format: int64
          description: 供应商ID
        note:
          type: string
          nullable: true
          description: 备注
        orderDate:
          type: string
          format: date
          example: "1970-01-01"
          description: 订单日期
        orderItems:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseOrderItemInput"
          minItems: 1
          description: 订单明细

    # ============= OrderItem schemas =============
    SaleOrderItem:
      type: object
      required:
        - id
        - inventoryUnitId
        - quantity
        - unitPrice
        - discountedPrice
        - subtotal
      properties:
        id:
          type: integer
          format: int64
          description: 订单明细ID
        inventoryUnitId:
          type: integer
          format: int64
          description: 库存单元ID
        quantity:
          type: integer
          description: 数量
        unitPrice:
          type: number
          format: double
          description: 单价
        discountedPrice:
          type: number
          format: double
          description: 折扣价
        subtotal:
          type: number
          format: double
          description: 小计

    SaleOrderItemInput:
      type: object
      required:
        - inventoryUnitId
        - quantity
        - unitPrice
      properties:
        inventoryUnitId:
          type: integer
          format: int64
          description: 库存单元ID
        quantity:
          type: integer
          minimum: 1
          description: 数量
        unitPrice:
          type: number
          format: double
          minimum: 0
          description: 单价
        discountFactor:
          type: number
          format: double
          minimum: 0
          maximum: 1
          description: 折扣率

    PurchaseOrderItem:
      type: object
      required:
        - id
        - productId
        - quantity
        - unitPrice
        - subtotal
      properties:
        id:
          type: integer
          format: int64
          description: 订单明细ID
        productId:
          type: integer
          format: int64
          description: 产品ID
        quantity:
          type: integer
          description: 数量
        unitPrice:
          type: number
          format: double
          description: 单价
        serialNumber:
          type: string
        subtotal:
          type: number
          format: double
          description: 小计

    PurchaseOrderItemInput:
      type: object
      required:
        - productId
        - quantity
        - unitPrice
      properties:
        productId:
          type: integer
          format: int64
          description: 产品ID
        quantity:
          type: integer
          minimum: 1
          description: 数量
        unitPrice:
          type: number
          format: double
          minimum: 0
          description: 单价
        serialNumber:
          type: string

    ProductUnit:
      type: string
      description: 产品单位枚举
      enum:
        - item # 件
        - piece # 件
        - box # 箱
        - pack # 包
        - dozen # 打
        - pair # 对
        - gram # 克
        - kilogram # 千克
        - liter # 升
        - milliliter # 毫升
        - meter # 米
        - centimeter # 厘米
        - bottle # 瓶
        - barrel # 桶
        - bag # 袋
        - sheet # 张
        - roll # 卷
      x-enum-descriptions:
        - 个
        - 件
        - 箱
        - 包
        - 打
        - 对
        - 克
        - 千克
        - 升
        - 毫升
        - 米
        - 厘米
        - 瓶
        - 桶
        - 袋
        - 张
        - 卷

    ProductType:
      type: string
      description: 产品类型
      enum:
        - material
        - asset
      x-enum-descriptions:
        - 普通产品
        - 资产

    OrderStatus:
      type: string
      description: 订单状态
      enum:
        - pending
        - completed
        - canceled
        - reversed
      x-enum-varnames:
        - pending
        - completed
        - canceled
        - reversed
      x-enum-descriptions:
        - 待处理
        - 已完成
        - 已取消
        - 已撤回

    PageTemplate:
      type: object
      required:
        - content
        - totalElements
        - number
        - size
      properties:
        content:
          type: array
          items:
            type: string
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          description: 当前页码，从 0 开始
        size:
          type: integer
          description: 每页条数

    Sex:
      type: string
      description: 性别
      enum:
        - male
        - female
      x-enum-varnames:
        - male
        - female
      x-enum-descriptions:
        - 男
        - 女
    Error:
      description: 错误信息
      type: object
      required:
        - code
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
